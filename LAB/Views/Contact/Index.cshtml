@model IEnumerable<LAB.Models.客戶聯絡人>

@{
    ViewBag.Title = "Index";
}


@section pageheader{
    客戶聯絡人
}

@section breadcrumb{
    <li><i class="fa fa-laptop"></i>客戶聯絡人</li>
}

<p>
    @Html.ActionLink("Create New", "Create")
    <span style="background-color: lightgray; margin: 0 7px 0 7px">
        @Html.ActionLink("Error1", "Error1")
    </span>
    @Html.ActionLink("Default Error Page", "Error2")    
</p>

<table class="table">
    <tr>
        <th>
            <span id="jtt" class="contactTh" sortby="@Html.DisplayNameFor(model => model.職稱)">
                @Html.DisplayNameFor(model => model.職稱)
            </span>
            <select id="jobTitlesSel" name="jobTitlesSel"></select>
        </th>
        <th id="nt" class="contactTh" sortby="@Html.DisplayNameFor(model => model.姓名)">
            @Html.DisplayNameFor(model => model.姓名)
        </th>
        <th id="et" class="contactTh" sortby="@Html.DisplayNameFor(model => model.Email)">
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th id="mt" class="contactTh" sortby="@Html.DisplayNameFor(model => model.手機)">
            @Html.DisplayNameFor(model => model.手機)
        </th>
        <th id="pt" class="contactTh" sortby="@Html.DisplayNameFor(model => model.電話)">
            @Html.DisplayNameFor(model => model.電話)
        </th>
        <th id="cnt" class="contactTh" sortby="@Html.DisplayNameFor(model => model.客戶資料.客戶名稱)">
            @Html.DisplayNameFor(model => model.客戶資料.客戶名稱)
        </th>
        <th></th>
    </tr>
    <tbody id="contactList">

    </tbody>
</table>

<div id="pagedPager"></div>



@section styles{
@Styles.Render("~/Content/css")
    <style>
        .contactTh {
            cursor: pointer;
        }
    </style>    
}

@section scripts {
    <script type="text/javascript">
        //<![CDATA[

        var lab = lab || {};
        lab.selectedJobTitle = '';
        lab.sort = '';
        lab.sortBy = '';
        lab.sortClass = ["glyphicon glyphicon-sort-by-alphabet", "glyphicon glyphicon-sort-by-alphabet-alt"];
        lab.allTh = ["jtt", "nt", "et", "mt", "pt", "cnt"];
        

        lab.onJobTitleChanged = function (t,p) {
            var $clDiv = $("#contactList");
            $.ajax({
                url: '@Url.Action("Contacts", "Contact")',
                type: 'POST',
                data: { jobTitle: t, sortBy: lab.sortBy, sort: lab.sort, page: p },
                cache: false,
                async: false,
                success: function (data) {
                    
                    $clDiv.empty();
                    if (data) {
                        $clDiv.html(data);
                        if ($(".pager").length > 0) {
                            $("#pagedPager").html($(".pager").html());
                            $(".pager").remove();
                        }

                        $('#pagedPager .pagination li a').each(function (i, item) {
                            var hyperLinkUrl = $(item).attr('href');
                            if (hyperLinkUrl) {
                                var page = $(item).attr('href').replace('/Contact?page=', '');
                                $(item).attr('href', '#').click(function (event) {
                                    event.preventDefault();
                                    $(event.target).attr('href');
                                    lab.onJobTitleChanged(lab.selectedJobTitle, page);
                                });
                            }
                        });
                    }
                }
            });           
        };
        

        $(function () {
            
            lab.onJobTitleChanged();


            $.each(lab.allTh, function (i,n) {
                $("#" + n).click(function () {
                    var t = $(this).attr("sortby");
                    if (lab.sortBy === t) {
                        lab.sort = (lab.sort) && lab.sort === "asc" ? "desc" : "asc";
                    } else {
                        lab.sort = "asc";
                    }
                    lab.sortBy = t;
                    
                    lab.onJobTitleChanged(lab.selectedJobTitle);

                    $("#sorticon").remove();
                    $('<span id="sorticon"></span>')
                        .attr("class", lab.sort === "asc" ? lab.sortClass[0] : lab.sortClass[1])
                        .appendTo($(this));

                });
            });

            

            var $jobTitlesSel = $("#jobTitlesSel");
            $.ajax({
                url: '@Url.Action("GetAllJobTitles", "Contact")',
                type: 'POST',
                cache: false,
                async: false,
                dataType: 'JSON',
                success: function (data) {
                    $jobTitlesSel.empty();

                    if (data.length > 0) {
                        $jobTitlesSel.append($('<option></option>').val('').text(''));
                        $.each(data, function (i, t) {
                            $jobTitlesSel.append($('<option></option>').val(t).text(t));
                        });
                        $jobTitlesSel.val(lab.selectedJobTitle);
                    }
                }
            });

            $jobTitlesSel.change(function () {
                lab.selectedJobTitle = $(this).val();
                lab.onJobTitleChanged($(this).val());
            });
        });

        //]]>
    </script>
}
